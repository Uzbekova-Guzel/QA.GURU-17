plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

allure {
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

repositories {
    mavenCentral()
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            'com.codeborne:selenide:6.10.3',
            'org.junit.jupiter:junit-jupiter:5.9.1',
            'org.slf4j:slf4j-simple:2.0.6',
            'org.assertj:assertj-core:3.24.2',
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.7.1',
            'com.google.code.gson:gson:2.10.1',
            'com.fasterxml.jackson.core:jackson-databind:2.14.1',
            'com.github.javafaker:javafaker:1.0.2',
            'io.qameta.allure:allure-selenide:2.19.0'
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task simple_test(type: Test) {
    useJUnitPlatform{
        includeTags("simple")
    }
}

task remote_test(type: Test) {
    useJUnitPlatform{
        includeTags("remote")
    }
}

task one_property_test(type: Test) {
    useJUnitPlatform{
        includeTags("one_property")
    }
}

task hello_test(type: Test) {
    useJUnitPlatform{
        includeTags("hello")
    }
}

task two_test(type: Test) {
    useJUnitPlatform{
        includeTags("hello")
        includeTags("one_property")
    }
}